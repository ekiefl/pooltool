name: test

on:
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.13"]
        poetry-version: ["1.8.4"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install project dependencies
        run: poetry install
        env:
          # Don't give up too soon
          POETRY_REQUESTS_TIMEOUT: '120'
      - name: Run tests
        run: poetry run make test

      # Calculate the test coverage
      - name: Generate coverage report
        if: matrix.python-version == '3.13' && matrix.os == 'ubuntu-latest'
        run: |
          poetry run make test-coverage

      # Upload coverage to Codecov
      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.13' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: service
          name: service-${{ github.run_id }}
          fail_ci_if_error: true
          verbose: true
